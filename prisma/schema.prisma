generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  id             String  @id @default(cuid())
  username       String  @unique
  imageUrl       String  @db.Text
  externalUserId String  @unique
  bio            String? @db.Text

  following  Follow[] @relation(name: "Following")
  followedBy Follow[] @relation(name: "FollowedBy")

  blocking  Block[] @relation(name: "Blocking")
  blockedBy Block[] @relation(name: "BlockedBy")

  stream Stream?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Stream {
  id           String  @id @default(cuid())
  name         String  @db.Text
  thumbnailUrl String? @db.Text
  ingressId    String? @unique
  serverUrl    String? @db.Text
  streamKey    String? @db.Text

  isLive              Boolean @default(false)
  isChatEnabled       Boolean @default(true)
  isChatDelayed       Boolean @default(false)
  isChatFollowersOnly Boolean @default(false)

  userId String @unique
  user   Users  @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([ingressId])
}

model Follow {
  id          String @id @default(cuid())
  followerId  String
  followingId String

  follower  Users @relation(name: "Following", fields: [followerId], references: [id], onDelete: Cascade)
  following Users @relation(name: "FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model Block {
  id        String @id @default(cuid())
  blockerId String
  blockedId String

  blocker Users @relation(name: "Blocking", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked Users @relation(name: "BlockedBy", fields: [blockedId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([blockerId, blockedId])
  @@index([blockerId])
  @@index([blockedId])
}
